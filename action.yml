name: 'PHP Unit Test'
description: 'PHP Unit Test'

inputs:
  mysql:
    description: 'Install mysql'
    required: false
    default: 'yes'

  redis:
    description: 'Install Redis'
    required: false
    default: 'yes'

  clickhouse:
    description: 'Install Clickhouse'
    required: false
    default: 'yes'

  mysql-version:
    description: 'MySQL Image'
    required: false
    default: '8.0'

  php-version:
    description: 'PHP Version'
    required: true
    default: '7.4'

  extensions:
    description: 'Extensions PHP'
    required: true
    default: 'bcmath, iconv, ctype, gd, mbstring, mysqli, pdo, pdo_mysql, sockets, zip, soap, intl, fileinfo, json, libxml, openssl, pcntl, posix, simplexml, zend-opcache, runkit7, igbinary, redis'

  config-file:
    description: 'Path to phpunit.xml'
    required: true
    default: 'phpunit.xml.dist'

  additional-parameters:
    description: 'Additional parameters for the phpunit command'
    required: true
    default: ''

  public-project:
    description: 'Public project'
    required: true
    default: 'no'

  app-local-php:
    description: 'Config file'
    required: false
    default: ''

  post-install-cmd:
    description: 'Composer Post Install CMD'
    required: false
    default: 'yes'

  config-dir:
    description: 'Config directory for app-local.php'
    required: false
    default: 'config'

runs:
  using: "composite"
  steps:
    - uses: actions/checkout@v2

    - name: Setup config
      if: ${{ (inputs.public-project == 'no') && (inputs.app-local-php != 'no') }}
      run: mv ./config/app_local_ci.php ./${{ inputs.config-dir }}/app_local.php
      shell: bash

    - name: Setup secret config
      if: ${{ (inputs.public-project == 'yes') && (inputs.app-local-php != 'no') }}
      run: echo "${{ inputs.app-local-php }}" > ./${{ inputs.config-dir }}/app_local.php
      shell: bash

    - name: Install Clickhouse
      if: ${{ inputs.clickhouse == 'yes' }}
      uses: EpicStep/clickhouse-github-action@v1.0.0

    - name: Install mysql
      if: ${{ inputs.mysql == 'yes' }}
      uses: mirromutth/mysql-action@v1.1
      with:
        host port: 3306
        container port: 3306
        mysql version: ${{ inputs.mysql-version }}
        mysql database: cakephp
        mysql root password: root

    - name: Install Redis    
      if: ${{ inputs.redis == 'yes' }}  
      uses: zhulik/redis-action@1.1.0

    - name: Setup cache environment
      id: extcache
      uses: shivammathur/cache-extensions@v1
      with:
        php-version: ${{ inputs.php-version }}
        extensions: ${{ inputs.extensions }}
        key: eggheads-extension-php

    - name: Cache extensions
      uses: actions/cache@v2
      with:
        path: ${{ steps.extcache.outputs.dir }}
        key: ${{ steps.extcache.outputs.key }}
        restore-keys: ${{ steps.extcache.outputs.key }}

    - name: Setup PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: ${{ inputs.php-version }}
        extensions: ${{ inputs.extensions }}
        tools: composer

    - name: Cache Composer packages
      id: composer-cache
      uses: actions/cache@v2
      with:
        path: vendor
        key: ${{ runner.os }}-php-${{ hashFiles('**/composer.lock') }}
        restore-keys: |
          ${{ runner.os }}-php-

    - name: Install dependencies
      run: composer install --no-progress --prefer-dist --optimize-autoloader
      shell: bash

    - name: Post Install dependencies
      if: ${{ inputs.post-install-cmd == 'yes' }}
      run: composer run-script post-install-cmd --no-interaction
      shell: bash

    - name: Migrations
      if: ${{ inputs.mysql == 'yes' }}
      run: |
        mysql -h"127.0.0.1" -P"3306" -uroot -proot -e "CREATE DATABASE cakephp_test;"
        vendor/bin/phinx migrate 2> /dev/null && echo 'skip'
        vendor/bin/phinx migrate
      shell: bash

    - name: PHPUnit
      run: php -dxdebug.mode=develop vendor/bin/phpunit --printer mheap\\GithubActionsReporter\\Printer --colors=always -c ${{ inputs.config-file }} ${{ inputs.additional-parameters }}
      shell: bash